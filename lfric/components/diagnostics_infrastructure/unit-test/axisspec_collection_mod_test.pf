!-----------------------------------------------------------------------------
! (C) Crown copyright 2021 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------

!> Test the axisspec collection object
!>
module axisspec_collection_mod_test

  use constants_mod,                only: i_def, r_def, str_def
  use axisspec_mod,                 only: axisspec_type
  use axisspec_collection_mod,      only: axisspec_collection_type
  use non_spatial_dimension_mod,    only: NUMERICAL, CATEGORICAL
  use pFUnit_Mod

  implicit none

  private
  public :: test_assignment

  @TestCase
  type, extends(TestCase), public :: axisspec_collection_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_assignment
  end type axisspec_collection_test_type

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    implicit none

    class(axisspec_collection_test_type), intent(inout) :: this

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine tearDown( this )

    implicit none

    class(axisspec_collection_test_type), intent(inout) :: this

  end subroutine tearDown

  !> Test that axisspec objects are correctly added to the collection and are retrievable
  !>
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  @test
  subroutine test_assignment( self )

    implicit none

    class(axisspec_collection_test_type), intent(inout) :: self
    type(axisspec_type),                  pointer       :: returned_axisspec => null()
    type(axisspec_collection_type)                      :: d_collection
    character(str_def) :: returned_labels(3)
    character(str_def) :: expected_labels(3) = ['a', 'b', 'c']
    integer(i_def)     :: i

    d_collection = axisspec_collection_type()

    call d_collection%generate_and_add_axisspec( &
            "axisspec_1", &
            NUMERICAL, &
            numeric_axis_def=[real(r_def) :: 1,2,3])
    call d_collection%generate_and_add_axisspec( &
            "axisspec_2", &
            CATEGORICAL, &
            label_axis_def=[character(str_def) :: 'a','b','c'])

    returned_axisspec => d_collection%get_axisspec("absent")
    @assertNotAssociated(returned_axisspec)

    returned_axisspec => d_collection%get_axisspec("axisspec_1")
    @assertAssociated(returned_axisspec)
    @assertEqual("axisspec_1", returned_axisspec%get_unique_id())
    @assertEqual(NUMERICAL, returned_axisspec%get_axis_category())
    @assertEqual([real(r_def) :: 1,2,3], returned_axisspec%get_numeric_axis_def())

    returned_axisspec => d_collection%get_axisspec("axisspec_2")
    @assertAssociated(returned_axisspec)
    @assertEqual("axisspec_2", returned_axisspec%get_unique_id())
    @assertEqual(CATEGORICAL, returned_axisspec%get_axis_category())
    returned_labels = returned_axisspec%get_label_axis_def()
    do i= 1, size(returned_labels)
      @assertEqual(expected_labels(i), returned_labels(i))
    end do

  end subroutine test_assignment

end module axisspec_collection_mod_test
