!-----------------------------------------------------------------------------
! (C) Crown copyright 2021 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------

!> Test the axisspec collection object
!>
module axisspec_mod_test

    use constants_mod,               only : r_def, str_def, i_def
    use axisspec_mod,                only : axisspec_type
    use non_spatial_dimension_mod,   only : NUMERICAL, CATEGORICAL
    use pFUnit_Mod

    implicit none

    private
    public :: test_assignment

    @TestCase
    type, extends(TestCase), public :: axisspec_test_type
        private
    contains
        procedure setUp
        procedure tearDown
        procedure test_assignment
    end type axisspec_test_type

contains

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    subroutine setUp(this)

        implicit none

        class(axisspec_test_type), intent(inout) :: this

    end subroutine setUp

    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    subroutine tearDown(this)

        implicit none

        class(axisspec_test_type), intent(inout) :: this

    end subroutine tearDown



    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    @test
    subroutine test_assignment(self)

        implicit none

        class(axisspec_test_type), intent(inout) :: self

        type(axisspec_type)       :: numerical_axisspec
        type(axisspec_type)       :: categorical_axisspec
        character(str_def)        :: returned_labels(4)
        character(str_def)        :: expected_labels(4) = ['a', 'b', 'c', 'd']
        integer(i_def)            :: i

        numerical_axisspec = axisspec_type( &
                "model_vert_axis_numerical", &
                NUMERICAL, &
                numeric_axis_def=[real(r_def) :: 1,2,3])
        categorical_axisspec = axisspec_type( &
                "fixed_vert_axis_categorical", &
                CATEGORICAL, &
                label_axis_def=[character(str_def) :: 'a','b','c','d'])

        returned_labels = categorical_axisspec%get_label_axis_def()

        @assertEqual("model_vert_axis_numerical", numerical_axisspec%get_unique_id())
        @assertEqual("fixed_vert_axis_categorical", categorical_axisspec%get_unique_id())
        @assertEqual(NUMERICAL, numerical_axisspec%get_axis_category())
        @assertEqual(CATEGORICAL, categorical_axisspec%get_axis_category())
        @assertEqual(3, numerical_axisspec%get_size())
        @assertEqual(4, categorical_axisspec%get_size())
        @assertEqual(.true., numerical_axisspec%get_is_primary_axis())
        @assertEqual(.false., categorical_axisspec%get_is_primary_axis())
        @assertEqual([real(r_def) :: 1,2,3], numerical_axisspec%get_numeric_axis_def())
        do i=1, 4
            @assertEqual(expected_labels(i), returned_labels(i))
        end do

    end subroutine test_assignment

end module axisspec_mod_test
