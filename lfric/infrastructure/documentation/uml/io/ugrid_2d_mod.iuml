' Copyright (c) 2017,  Met Office, on behalf of HMSO and Queen's Printer
' For further details please refer to the file LICENCE.original which you
' should have received as part of this distribution.

class ugrid_2d_mod::ugrid_2d_type {

  -mesh_name: string
  -geometry: string
  -topology: string
  -coord_sys: string
  -periodic_x: logical
  -periodic_y: logical
  -constructor_inputs: string
  -coord_units_x: string
  -coord_units_y: string
  -edge_cells_x: integer
  -edge_cells_y: integer
  -num_cells: integer
  -num_nodes: integer
  -num_edges: integer
  -num_faces: integer
  -num_nodes_per_face: integer
  -num_nodes_per_edge: integer
  -num_edges_per_face: integer
  -max_num_faces_per_node: integer
  -max_stencil_depth: integer
  -node_coordinates: real[::] <<allocatable>>
  -face_coordinates: real[::] <<allocatable>>
  -face_node_connectivity: integer[::] <<allocatable>>
  -edge_node_connectivity: integer[::] <<allocatable>>
  -face_edge_connectivity: integer[::] <<allocatable>>
  -face_face_connectivity: integer[::] <<allocatable>>

  -nmaps: integer
  -target_mesh_names:   string[:] <<allocatable>>
  -target_edge_cells_x: integer[:] <<allocatable>>
  -target_edge_cells_y: integer[:] <<allocatable>>
  -target_mesh_maps: global_mesh_map_collection_type

  -file_handler: ugrid_file_type <<allocatable>>


  +<<destroy>>ugrid_2d_destructor()
  +clear()

  +get_n_meshes( <<in>> filename: string, <<out>> n_meshes: integer )
  +get_mesh_names( <<in>> filename: string, <<out>> mesh_names: string[:] )
  +get_dimensions( <<out>> num_nodes: integer, <<out>> num_edges: integer, <<out>> num_faces: integer, <<out>> num_nodes_per_face: integer, <<out>> num_edges_per_face: integer, <<out>> num_nodes_per_edge: integer, <<out>> max_num_faces_per_node: integer )
  +set_by_generator( <<inout>> generator_strategy: ugrid_generator_type )
  +set_file_handler( <<inout>> file_handler: ugrid_file_type )
  +set_from_file_read( <<in>>mesh_name: string, <<in>> filename: string )
  +write_to_file( <<in>> filename: string )
  +append_to_file( <<in>> filename: string )
  +get_metadata(\n\t<<out,optional>> mesh_name: string,\n\t <<out,optional>> geometry: string,\n\t <<out,optional>> topology: string,\n\t <<out,optional>> coord_sys: string,\n\t <<out,optional>> periodic_x: logical,\n\t <<out,optional>> periodic_y: logical,\n\t <<out,optional>> edge_cells_x: integer,\n\t <<out,optional>> edge_cells_y: integer,\n\t <<out,optional>> constructor_inputs: string,\n\t <<out,optional>> nmaps: integer,\n\t <<out,optional,allocatable>> target_mesh_names: string )

  +get_coord_units( <<out>> coords_units_x: string, <<out>> coord_units_y: string )
  +get_node_coords( <<out>> node_coords: real[::] )
  +get_face_coords( <<out>> face_coords: real[::] )
  +get_face_node_connectivity( <<out>> face_node_connectivity: integer[::] )
  +get_face_edge_connectivity( <<out>> face_edge_connectivity: integer[::] )
  +get_face_face_connectivity( <<out>> face_face_connectivity: integer[::] )

  +write_coordinates()

}

ugrid_2d_mod::ugrid_2d_type -> ugrid_file_mod::ugrid_file_type : -file_handler
