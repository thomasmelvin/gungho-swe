!-----------------------------------------------------------------------------!
! (c) Crown copyright 2018 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------!

!> Test the quadrature rule modules
!>
module quadrature_rule_mod_test

  implicit none

contains

  @test
  subroutine test_quadrature_rule_mod
    use pFUnit_Mod
    use quadrature_rule_gaussian_mod,      only: quadrature_rule_gaussian_type
    use quadrature_rule_gauss_lobatto_mod, only: quadrature_rule_gauss_lobatto_type
    use quadrature_rule_newton_cotes_mod,  only: quadrature_rule_newton_cotes_type
    use constants_mod,                     only: r_def, i_def
    implicit none

    integer(kind=i_def), parameter    :: nq = 3
    real(kind=r_def), dimension(nq,2) :: xwq, xw
    real(kind=r_def), parameter       :: tol  = 1.0e-14_r_def

    type(quadrature_rule_gaussian_type)      :: gl
    type(quadrature_rule_gauss_lobatto_type) :: gll
    type(quadrature_rule_newton_cotes_type)  :: nc

    ! Test the Gaussian Quadrature
    xwq = gl%quadrature_rule( nq )
    ! Exact weights and points
    xw(:,1) = 0.5_r_def + 0.5_r_def*(/ -sqrt(3.0_r_def/5.0_r_def), 0.0_r_def, sqrt(3.0_r_def/5.0_r_def) /)
    xw(:,2) = (/5.0_r_def, 8.0_r_def, 5.0_r_def /)/18.0_r_def
    @assertEqual( xw, xwq, tol)

    ! Test the Gaussian-Lobatto Quadrature
    xwq = gll%quadrature_rule( nq )
    ! Exact weights and points
    xw(:,1) = 0.5_r_def + 0.5_r_def*(/ -1.0_r_def, 0.0_r_def, 1.0_r_def /)
    xw(:,2) = (/1.0_r_def, 4.0_r_def, 1.0_r_def /)/6.0_r_def
    @assertEqual( xw, xwq, tol)

    ! Test the Newton-Cotes Quadrature (for 3 points this is the same as Gaussian-Lobatto)
    xwq = nc%quadrature_rule( nq )
    ! Exact weights and points
    xw(:,1) = 0.5_r_def + 0.5_r_def*(/ -1.0_r_def, 0.0_r_def, 1.0_r_def /)
    xw(:,2) = (/ 1.0_r_def, 4.0_r_def, 1.0_r_def /)/6.0_r_def
    @assertEqual( xw, xwq, tol)

  end subroutine test_quadrature_rule_mod


end module quadrature_rule_mod_test



