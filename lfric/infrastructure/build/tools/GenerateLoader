#!/usr/bin/env python3
##############################################################################
# Copyright (c) 2017,  Met Office, on behalf of HMSO and Queen's Printer
# For further details please refer to the file LICENCE.original which you
# should have received as part of this distribution.
##############################################################################
# pylint: disable=invalid-name
"""
Takes a list of namelists and generates source for a namelist loader.
"""
import argparse
import logging
from pathlib import Path

from configurator import __version__
import configurator.configurationloader as loader


def main():
    """
    Entry point. Handles command-line arguments.
    """
    parser = argparse.ArgumentParser(add_help=False,
                                     description=__doc__)
    parser.add_argument('-help', '-h', '--help', action='help',
                        help='Show this help message and exit')
    parser.add_argument('-version', action='version',
                        version=f'%(prog)s {__version__}')
    parser.add_argument('-verbose', action='store_true',
                        help='Provide a running commentry')
    parser.add_argument('outputFilename', metavar='output-filename',
                        type=Path,
                        help='Source file to produce')
    parser.add_argument('namelistNames', metavar='namelist',
                        nargs='*',
                        help='Namelists to load.')
    args = parser.parse_args()

    if args.verbose:
        handler = logging.StreamHandler()
        logging.getLogger('configurator').addHandler(handler)
        logging.getLogger('configurator').setLevel(logging.WARNING)

    module_name = args.outputFilename.stem
    generator = loader.ConfigurationLoader(module_name)
    for name in args.namelistNames:
        generator.add_namelist(name)

    generator.write_module(args.outputFilename)


if __name__ == '__main__':
    main()
