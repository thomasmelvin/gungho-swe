!-----------------------------------------------------------------------------
! (C) Crown copyright 2019 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------
!>
!>@brief Update factors for moist dynamics
!>
module moist_dyn_factors_alg_mod

  use constants_mod,                only : i_def
  use field_mod,                    only : field_type
  use formulation_config_mod,       only : moisture_formulation,            &
                                           moisture_formulation_dry,        &
                                           moisture_formulation_passive,    &
                                           moisture_formulation_active,     &
                                           moisture_formulation_traditional
  use log_mod,                      only : log_event, LOG_LEVEL_ERROR
  use mr_indices_mod,               only : nummr, imr_v
  use moist_dyn_mod,                only : num_moist_factors, &
                                           gas_law,           &
                                           total_mass,        &
                                           water

  use moist_dyn_gas_kernel_mod,      only : moist_dyn_gas_kernel_type
  use moist_dyn_mass_kernel_mod,     only : moist_dyn_mass_kernel_type

  implicit none

contains

  !> @details Update factors for moist dynamics
  !> @param[in,out] moist_dyn Auxilliary fields for moist dynamics
  !> @param[in] mr Field bundle containing the moisture mixing ratios
  subroutine moist_dyn_factors_alg( moist_dyn, mr )

    implicit none

    ! Moist dynamics
    type( field_type ), intent(inout) :: moist_dyn(num_moist_factors)
    ! Moisture mixing ratios
    type( field_type ), intent(in)    :: mr(nummr)

    select case(moisture_formulation)
    case(moisture_formulation_dry, moisture_formulation_passive)
      call invoke( setval_c(moist_dyn(gas_law),    1.0_r_def),  &
                   setval_c(moist_dyn(total_mass), 1.0_r_def),  &
                   setval_c(moist_dyn(water),      1.0_r_def) )
    case(moisture_formulation_active)
      call invoke( setval_c(moist_dyn(gas_law), 1.0_r_def),               &
                   moist_dyn_mass_kernel_type(moist_dyn(total_mass), mr), &
                   setval_c(moist_dyn(water), 1.0_r_def) )
    case(moisture_formulation_traditional)
      call invoke( moist_dyn_gas_kernel_type(moist_dyn(gas_law), mr(imr_v)), &
                   moist_dyn_mass_kernel_type(moist_dyn(total_mass), mr),    &
                   setval_c(moist_dyn(water), 1.0_r_def) )
    case default
      call log_event('Unknown moisture_formulation', LOG_LEVEL_ERROR)
    end select

  end subroutine moist_dyn_factors_alg

end module moist_dyn_factors_alg_mod
