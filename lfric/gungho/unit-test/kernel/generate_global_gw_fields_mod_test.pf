!-----------------------------------------------------------------------------
! Copyright (c) 2017,  Met Office, on behalf of HMSO and Queen's Printer
! For further details please refer to the file LICENCE.original which you
! should have received as part of this distribution.
!-----------------------------------------------------------------------------

module generate_global_gw_fields_mod_test

  use constants_mod, only: r_def, i_def
  use pFUnit_Mod

  implicit none

  private
  public :: generate_global_gw_fields_test_type, test_all

  @TestCase
  type, extends(TestCase) :: generate_global_gw_fields_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_all
  end type generate_global_gw_fields_test_type

  real(r_def), parameter :: bvf_square = 0.0001_r_def
  real(r_def), parameter :: theta_surf = 300.0_r_def
  real(r_def), parameter :: pert_width_scaling = 1.0_r_def

  integer(kind=i_def), parameter :: profile_size       = 4
  real(kind=r_def),    parameter :: profile_data(4)    = (/ 280.0_r_def,   &
                                                            300.0_r_def,   &
                                                            305.0_r_def,   &
                                                            400.0_r_def /)
  real(kind=r_def),    parameter :: profile_heights(4) = (/ 500.0_r_def,   &
                                                            4.0e3_r_def,   &
                                                            4.0e3_r_def,   &
                                                            40.0e3_r_def /)

  real(r_def), parameter :: gravity  = 10.0_r_def
  real(r_def), parameter :: radius   = 6000000_r_def
  real(r_def), parameter :: omega    = 8.0E-5_r_def
  real(r_def), parameter :: p_zero   = 100000.0_r_def
  real(r_def), parameter :: rd       = 300.0_r_def
  real(r_def), parameter :: cp       = 1000.0_r_def
  real(r_def), parameter :: scaling  = 1.0_r_def

  real(r_def), parameter :: surface_pressure = 1000.0e2_r_def

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    use feign_config_mod,        only : feign_initial_temperature_config, &
                                        feign_planet_config,              &
                                        feign_initial_wind_config,        &
                                        feign_formulation_config,         &
                                        feign_initial_pressure_config

    use formulation_config_mod, only :  eos_method_sampled,      &
                                        moisture_formulation_dry

    use initial_pressure_config_mod,                    &
                                 only : method_balanced

    use initial_temperature_config_mod,                 &
                                 only : perturb_none

    use initial_wind_config_mod, only : profile_none
    implicit none

    class(generate_global_gw_fields_test_type), intent(inout) :: this

    call feign_initial_temperature_config( bvf_square=bvf_square,                 &
                                           theta_surf=theta_surf,                 &
                                           pert_width_scaling=pert_width_scaling, &
                                           perturb=perturb_none,                  &
                                           profile_size=profile_size,             &
                                           profile_data=profile_data,             &
                                           profile_heights=profile_heights )

    call feign_initial_pressure_config( method = method_balanced,             &
                                        surface_pressure = surface_pressure )

    call feign_planet_config( gravity=gravity, radius=radius, omega=omega, &
                              rd=rd, cp=cp, p_zero=p_zero,                 &
                              scaling_factor=scaling )

    call feign_initial_wind_config( profile=profile_none,       &
                                    u0=0.0_r_def,               &
                                    v0=0.0_r_def,               &
                                    sbr_angle_lat=0.0_r_def,    &
                                    sbr_angle_lon=0.0_r_def,    &
                                    nl_constant=0.0_r_def,      &
                                    shear=1.0_r_def,            &
                                    wavelength=1.0_r_def,       &
                                    wind_time_period=0.0_r_def, &
                                    smp_init_wind = .false.  )

    call feign_formulation_config(rotating=.false.,                         &
                                  l_multigrid=.false.,                      &
                                  moisture_formulation =                    &
                                  moisture_formulation_dry,                 &
                                  shallow=.true., use_physics=.false.,      &
                                  use_wavedynamics=.true.,                  &
                                  use_multires_coupling=.false.,            &
                                  dry_static_adjust=.false.,                &
                                  exner_from_eos=.false.,                   &
                                  eos_method=eos_method_sampled,            &
                                  dlayer_on=.false.,                        &
                                  init_exner_bt        = .true.,            &
                                  si_momentum_equation=.true.,              &
                                  vector_invariant=.true.                   &
                                 )
  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine tearDown( this )

    use configuration_mod,        only: final_configuration

    implicit none

    class(generate_global_gw_fields_test_type), intent(inout) :: this

    call final_configuration()

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  @Test
  subroutine test_all( this )

    use generate_global_gw_fields_mod, only: generate_global_gw_fields

    implicit none

    class(generate_global_gw_fields_test_type), intent(inout) :: this

    real(r_def) :: tol = 1.0e010_r_def

    real(kind=r_def) :: lat, z
    real(kind=r_def) :: exner, theta, rho, u(3)
    real(kind=r_def) :: exner_ans, theta_ans, rho_ans, u_ans(3)

    lat = 0.0_r_def
    z   = 0.0_r_def

    ! Test the generation of prognostic fields for the
    ! spherical gravity wave case
    call generate_global_gw_fields(lat, z, exner, u, theta, rho)

    exner_ans = 1.0_r_def
    rho_ans   = p_zero/(Rd*300.0_r_def)
    theta_ans = 300.0_r_def
    u_ans(:)  = 0.0_r_def

    @assertEqual( theta_ans, theta, tol )
    @assertEqual( exner_ans, exner, tol )
    @assertEqual( rho_ans,   rho,   tol )
    @assertEqual( u_ans(1),  u(1),  tol )
    @assertEqual( u_ans(2),  u(2),  tol )
    @assertEqual( u_ans(3),  u(3),  tol )

  end subroutine test_all

end module generate_global_gw_fields_mod_test
