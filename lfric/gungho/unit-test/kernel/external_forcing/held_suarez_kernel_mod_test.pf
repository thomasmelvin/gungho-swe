!-----------------------------------------------------------------------------
! Copyright (c) 2017,  Met Office, on behalf of HMSO and Queen's Printer
! For further details please refer to the file LICENCE.original which you
! should have received as part of this distribution.
!-----------------------------------------------------------------------------

!> Test the held suarez forcing kernel
!>
module held_suarez_kernel_mod_test

  use constants_mod,                 only : i_def, r_def, r_second, PI
  use coord_transform_mod,           only : llr2xyz
  use pFUnit_Mod

  implicit none

  private
  public :: test_all

  @TestCase
  type, extends(TestCase), public :: held_suarez_test_type
    private
  contains
    procedure setup
    procedure tearDown
    procedure test_all
  end type held_suarez_test_type

  real(r_def), parameter :: gravity  = 9.80665_r_def
  real(r_def), parameter :: radius   = 6371229.0_r_def
  real(r_def), parameter :: omega    = 7.292116E-5_r_def
  real(r_def), parameter :: p_zero   = 100000.0_r_def
  real(r_def), parameter :: rd       = 287.05_r_def
  real(r_def), parameter :: cp       = 1005.0_r_def
  real(r_def), parameter :: kappa    = rd/cp
  real(r_def), parameter :: scaling  = 1.0_r_def
  real(r_def), parameter :: dlat=1.0_r_def, dlon=1.0_r_def, dz = 10000.0_r_def
  real(r_def), parameter :: dt = 600.0_r_def
  real(r_def), parameter :: rsecs_in_day = 1.0_r_def/86400.0_r_def

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    use chi_transform_mod,          only : init_chi_transforms
    use timestepping_config_mod,    only : method_semi_implicit, &
                                           runge_kutta_method_ssp3
    use feign_config_mod,           only : feign_finite_element_config, &
                                           feign_planet_config,         &
                                           feign_timestepping_config
    use finite_element_config_mod,  only : cellshape_quadrilateral, &
                                           coord_system_xyz

    implicit none

    class(held_suarez_test_type), intent(inout) :: this

    call feign_finite_element_config(      &
        cellshape=cellshape_quadrilateral, &
        coord_order=0_i_def,               &
        coord_system=coord_system_xyz,     &
        element_order=0_i_def,             &
        rehabilitate=.true.,               &
        vorticity_in_w1=.false. )

    call feign_planet_config( gravity=gravity, radius=radius, omega=omega, &
                              rd=rd, cp=cp, p_zero=p_zero,                 &
                              scaling_factor=scaling )

    call feign_timestepping_config(method=method_semi_implicit,                       &
                                   dt=real(dt, r_second), alpha=0.5_r_def, tau_u=0.5_r_def, &
                                   tau_t=0.5_r_def, tau_r=0.5_r_def,                  &
                                   outer_iterations=1_i_def, inner_iterations=1_i_def,&
                                   runge_kutta_method=runge_kutta_method_ssp3,        &
                                   spinup_period=0.0_r_second, spinup_alpha=.false.,     &
                                   spinup_winds=.false.    )

    call init_chi_transforms()

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine tearDown( this )

    use chi_transform_mod, only: final_chi_transforms
    use configuration_mod, only: final_configuration

    implicit none

    class(held_suarez_test_type), intent(inout) :: this

    ! Finalise namelists
    call final_configuration()
    call final_chi_transforms()

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  @Test
  subroutine test_all( this )

    use held_suarez_fv_kernel_mod,       only : held_suarez_fv_code
    use held_suarez_fv_wind_kernel_mod,  only : held_suarez_fv_wind_code
    use planet_config_mod,               only : scaled_radius

    use get_unit_test_m3x3_q3x3x3_sizes_mod, only: get_w2_m3x3_q3x3x3_size, &
                                                   get_w3_m3x3_q3x3x3_size, &
                                                   get_wtheta_m3x3_q3x3x3_size,&
                                                   get_wchi_m3x3_q3x3x3_size

    use get_unit_test_m3x3_dofmap_mod, only: get_w2_m3x3_dofmap, &
                                             get_w3_m3x3_dofmap, &
                                             get_wtheta_m3x3_dofmap, &
                                             get_wchi_m3x3_dofmap

    use get_unit_test_3x3x3_chi_mod, only: get_wchi_3x3x3_latlon_field

    implicit none

    class(held_suarez_test_type), intent(inout) :: this

    real(r_def) :: lon0, lat0, rad0
    real(r_def) :: tol ! Tolerance to default precision

    integer(i_def) :: cell

    integer(i_def)          :: i, j, k, df
    integer(i_def)          :: nlayers
    integer(i_def)          :: ndf_w2, undf_w2
    integer(i_def)          :: ndf_w3, undf_w3
    integer(i_def)          :: ndf_wth, undf_wth

    real(r_def)             :: x, y, z

    integer(i_def), allocatable :: map_w2(:,:)
    integer(i_def), allocatable :: map_w3(:,:)
    integer(i_def), allocatable :: map_wth(:,:)

    ! Dummy variable for passing into multi-getter routines where item is not needed
    integer(i_def) :: unused

    ! Test field data
    real(r_def), allocatable :: chi_data(:,:)
    real(r_def), allocatable :: panel_id(:)
    real(r_def), allocatable :: u_data(:)
    real(r_def), allocatable :: theta_data(:)
    real(r_def), allocatable :: exner_data(:)
    real(r_def), allocatable :: exner_wth_data(:)
    real(r_def), allocatable :: du_data(:)
    real(r_def), allocatable :: dtheta_data(:)
    real(r_def), allocatable :: w2_rmultiplicity_data(:)

    real(r_def) :: answer_du, answer_dtheta

    ! Get canned data for a 3-layer mesh
    nlayers = 3

    ! Get sizes
    call get_w2_m3x3_q3x3x3_size( ndf_w2, undf_w2, unused, &
                                  unused, unused,          &
                                  unused, unused,          &
                                  nlayers )

    call get_w3_m3x3_q3x3x3_size( ndf_w3, undf_w3, unused, &
                                  unused, unused,          &
                                  unused, unused,          &
                                  nlayers )

    call get_wtheta_m3x3_q3x3x3_size( ndf_wth, undf_wth, unused, &
                                      unused, unused,            &
                                      unused, unused,            &
                                      nlayers )
    ! Get dofmaps
    call get_w2_m3x3_dofmap(map_w2)
    call get_w3_m3x3_dofmap(map_w3)
    call get_wtheta_m3x3_dofmap(map_wth)

    ! Create the data arrays
    allocate(chi_data(undf_w3,3))
    allocate(panel_id(undf_w3))
    allocate(u_data(undf_w2))
    allocate(theta_data(undf_wth))
    allocate(exner_data(undf_w3))
    allocate(exner_wth_data(undf_wth))
    allocate(du_data(undf_w2))
    allocate(dtheta_data(undf_wth))
    allocate(w2_rmultiplicity_data(undf_w2))

    ! Make a 3x3x3 chi field on w3
    lon0 = 0.0_r_def
    lat0 = 0.0_r_def
    rad0 = scaled_radius
    panel_id(:) = 1.0_r_def

    cell=1
    do i = 0,2
      do j = 0,2
        do k = 0,2
          do df=1,ndf_w3
            call llr2xyz(lon0 + real((i-1), r_def)*dlon, &
                         lat0 + real((j-1), r_def)*dlat, &
                         rad0 + real(k, r_def)*dz, &
                         x, y, z)
            chi_data(map_w3(df, cell) + k, 1) = x
            chi_data(map_w3(df, cell) + k, 2) = y
            chi_data(map_w3(df, cell) + k, 3) = z
          end do
        end do
        cell=cell+1
      end do
    end do

    ! Create the data
    theta_data(:)            = 300.0_r_def
    u_data(:)                = 10.0_r_def
    exner_data(:)            = 1.0_r_def
    exner_wth_data(:)        = 1.0_r_def
    w2_rmultiplicity_data(:) = 1.0_r_def

    ! Only test interior cell 5
    cell=5

    call held_suarez_fv_code( nlayers,                              &
                              dtheta_data,                          &
                              theta_data,                           &
                              exner_data,                           &
                              chi_data(:,1),                        &
                              chi_data(:,2),                        &
                              chi_data(:,3),                        &
                              panel_id(:),                          &
                              kappa,                                &
                              dt,                                   &
                              ndf_wth, undf_wth, map_wth(:,cell),   &
                              ndf_w3, undf_w3, map_w3(:,cell),      &
                              ndf_w3, undf_w3, map_w3(:,cell)       &
                            )

    ! du is incremented so need to initialize
    du_data(:)     = 0.0_r_def

    call held_suarez_fv_wind_code( nlayers,                              &
                                   du_data,                              &
                                   u_data,                               &
                                   w2_rmultiplicity_data,                &
                                   exner_data,                           &
                                   exner_wth_data,                       &
                                   kappa, dt,                            &
                                   ndf_w2, undf_w2, map_w2(:,cell),      &
                                   ndf_w3, undf_w3, map_w3(:,cell),      &
                                   ndf_wth, undf_wth, map_wth(:,cell)    &
                                 )

    answer_dtheta = 15.0_r_def*0.25_r_def*dt*rsecs_in_day
    answer_du     = -dt*rsecs_in_day*10.0_r_def

    tol = spacing(answer_dtheta)
    @assertEqual( answer_dtheta, dtheta_data(map_wth(1,cell)), tol )
    tol = spacing(answer_du)
    @assertEqual( answer_du, du_data(map_w2(2,cell)), tol )

    deallocate(map_w2)
    deallocate(map_wth)
    deallocate(chi_data)
    deallocate(panel_id)
    deallocate(u_data)
    deallocate(theta_data)
    deallocate(exner_wth_data)
    deallocate(exner_data)
    deallocate(du_data)
    deallocate(dtheta_data)
    deallocate(w2_rmultiplicity_data)

  end subroutine test_all

end module held_suarez_kernel_mod_test
