!-----------------------------------------------------------------------------
! (C) Crown copyright 2021 Met Office. All rights reserved.
! For further details please refer to the file COPYRIGHT.txt
! which you should have received as part of this distribution.
!-----------------------------------------------------------------------------

!> Test the mixed operator application to the equation of state
!>
module apply_mixed_lp_operator_kernel_mod_test

  use constants_mod, only : i_def, r_def
  use pFUnit_Mod

  implicit none

  private
  public :: test_all

  @TestCase
  type, extends(TestCase), public :: apply_mixed_lp_operator_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_all
  end type apply_mixed_lp_operator_test_type

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    implicit none

    class(apply_mixed_lp_operator_test_type), intent(inout) :: this

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine tearDown( this )

    implicit none

    class(apply_mixed_lp_operator_test_type), intent(inout) :: this

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  @Test( )
  subroutine test_all( this )

    use apply_mixed_lp_operator_kernel_mod, only : apply_mixed_lp_operator_code

    implicit none

    class(apply_mixed_lp_operator_test_type), intent(inout) :: this

    real(r_def), parameter :: tol = 1.0e-12_r_def

    ! Mesh
    integer(i_def), parameter :: nlayers = 1
    integer(i_def), parameter :: cell = 1
    integer(i_def), parameter :: ncell = 1

    ! Spaces
    integer(i_def), parameter :: ndf_wt = 2
    integer(i_def), parameter :: ndf_w3 = 1
    integer(i_def), parameter :: undf_wt = nlayers + 1
    integer(i_def), parameter :: undf_w3 = ndf_w3*nlayers

    ! Maps
    integer(i_def), dimension(ndf_wt) :: map_wt
    integer(i_def), dimension(ndf_w3) :: map_w3

    ! Operators
    real(r_def), dimension(ndf_w3, ndf_w3, ncell) :: M3p, M3r
    real(r_def), dimension(ndf_w3, ndf_wt, ncell) :: Proj

    ! Fields
    real(r_def), dimension(undf_w3) :: Lp, p, r
    real(r_def), dimension(undf_wt) :: t

    integer(i_def) :: df
    real(r_def)    :: answer

    map_wt = (/ 1_i_def, 2_i_def /)
    map_w3 = (/ 1_i_def /)

    ! Set up operators
    M3p(:,:,1) = 11.0_r_def
    M3r(:,:,1) = 9.0_r_def

    Proj(:,1,1) = 3000.0_r_def
    Proj(:,2,1) = 3100.0_r_def

    ! Set up the fields
    t = (/ 300.0_r_def, 310.0_r_def /)
    p = (/ 1.2_r_def /)
    r = (/ 0.8_r_def /)
    Lp = 0.0_r_def

    ! Compute M3p*p - M3r*r - Proj*t
    call apply_mixed_lp_operator_code(cell,                    &
                                      nlayers,                 &
                                      Lp,                      &
                                      t, r, p,                 &
                                      ncell, M3p,              &
                                      ncell, M3r,              &
                                      ncell, Proj,             &
                                      ndf_w3, undf_w3, map_w3, &
                                      ndf_wt, undf_wt, map_wt)

    do df = 1,ndf_w3
      answer = M3p(df,df,1)*p(df) - M3r(df,df,1)*r(df) - sum(Proj(df,:,1)*t(:))
      @assertEqual(answer, Lp(df), tol)
    end do

  end subroutine test_all

end module apply_mixed_lp_operator_kernel_mod_test
