!-----------------------------------------------------------------------------
! (C) Crown copyright 2021 Met Office. All rights reserved.
! For further details please refer to the file COPYRIGHT.txt
! which you should have received as part of this distribution.
!-----------------------------------------------------------------------------

!> Test the mixed operator to the continuity equation
!>
module apply_mixed_lr_operator_kernel_mod_test

  use constants_mod, only : i_def, r_def
  use pFUnit_Mod

  implicit none

  private
  public :: test_all

  @TestCase
  type, extends(TestCase), public :: apply_mixed_lr_operator_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_all
  end type apply_mixed_lr_operator_test_type

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    implicit none

    class(apply_mixed_lr_operator_test_type), intent(inout) :: this

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine tearDown( this )

    implicit none

    class(apply_mixed_lr_operator_test_type), intent(inout) :: this

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  @Test( )
  subroutine test_all( this )

    use apply_mixed_lr_operator_kernel_mod, only : apply_mixed_lr_operator_code

    implicit none

    class(apply_mixed_lr_operator_test_type), intent(inout) :: this

    real(r_def), parameter :: tol = 1.0e-12_r_def

    ! Mesh
    integer(i_def), parameter :: nlayers = 1
    integer(i_def), parameter :: cell = 1
    integer(i_def), parameter :: ncell = 1

    ! Spaces
    integer(i_def), parameter :: ndf_w2 = 4
    integer(i_def), parameter :: ndf_w3 = 1
    integer(i_def), parameter :: undf_w2 = ndf_w2*nlayers
    integer(i_def), parameter :: undf_w3 = ndf_w3*nlayers

    ! Maps
    integer(i_def), dimension(ndf_w2) :: map_w2
    integer(i_def), dimension(ndf_w3) :: map_w3

    ! Operators
    real(r_def), dimension(ndf_w3, ndf_w3, ncell) :: iM3
    real(r_def), dimension(ndf_w3, ndf_w2, ncell) :: Div

    ! Fields
    real(r_def), dimension(undf_w3) :: Lr, r
    real(r_def), dimension(undf_w2) :: f

    ! Constants
    real(r_def) :: tau_dt

    integer(i_def) :: df
    real(r_def)    :: answer

    map_w2 = (/ 1_i_def, 2_i_def, 3_i_def, 4_i_def /)
    map_w3 = (/ 1_i_def /)

    ! Set up operators
    iM3(1,1,1) = 0.1_r_def
    do df = 1,ndf_w2
      Div(1,df,1) = (-1.0_r_def)**df
    end do

    ! Set up the fields
    f = (/ 0.0_r_def, 1.0_r_def, 3.0_r_def, -2.0_r_def /)
    r = (/ 1.2_r_def /)

    ! Set up constants
    tau_dt = 600.0_r_def

    ! Compute r + tau_dt*iM3*D*f
    call apply_mixed_lr_operator_code(cell,                    &
                                      nlayers,                 &
                                      Lr,                      &
                                      r,                       &
                                      ncell, iM3,              &
                                      ncell, Div,              &
                                      tau_dt,                  &
                                      f,                       &
                                      ndf_w3, undf_w3, map_w3, &
                                      ndf_w2, undf_w2, map_w2)

    do df = 1,ndf_w3
      answer = r(df) + tau_dt*iM3(df,df,1)*sum(Div(1,:,1)*f(:))
      @assertEqual(answer, Lr(df), tol)
    end do

  end subroutine test_all

end module apply_mixed_lr_operator_kernel_mod_test
