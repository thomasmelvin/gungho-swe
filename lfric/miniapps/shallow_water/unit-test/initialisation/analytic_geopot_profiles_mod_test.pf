!-----------------------------------------------------------------------------
! (c) Crown copyright 2022 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------

!> Test the analytic geopotential routine
!>

module analytic_geopot_profiles_mod_test

  use constants_mod,  only : r_def, i_def
  use pFUnit_Mod

  implicit none

  private
  public :: analytic_geopot_profiles_test_type, test_all

  @TestCase
  type, extends(TestCase) :: analytic_geopot_profiles_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_all
  end type analytic_geopot_profiles_test_type

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    use feign_config_mod,                   only : feign_base_mesh_config,           &
                                                   feign_planet_config,              &
                                                   feign_initial_wind_config,        &
                                                   feign_shallow_water_settings_config
    use initial_wind_config_mod,            only : profile_none
    use base_mesh_config_mod,               only : geometry_spherical,      &
                                                   topology_fully_periodic
    use shallow_water_settings_config_mod,  only : momentum_form_momentum,      &
                                                   swe_test_swe_geostr_balance, &
                                                   time_scheme_semi_implicit

    implicit none

    class(analytic_geopot_profiles_test_type), intent(inout) :: this

    call feign_planet_config( gravity=10.0_r_def,      &
                              radius=6000000.0_r_def,  &
                              omega=8.0E-5_r_def,      &
                              rd=300.0_r_def,          &
                              cp=1000.0_r_def,         &
                              p_zero=100000.0_r_def,   &
                              scaling_factor=1.0_r_def )

    call feign_base_mesh_config(                    &
               filename='foo',                      &
               prime_mesh_name='unit_test',         &
               geometry=geometry_spherical,         &
               offline_partitioning=.false.,        &
               topology=topology_fully_periodic,    &
               fplane=.false., f_lat_deg=0.0_r_def )

    call feign_shallow_water_settings_config(              &
                  thermal_swe = .false.,                   &
                  momentum_form = momentum_form_momentum,  &
                  time_scheme = time_scheme_semi_implicit, &
                  swe_test = swe_test_swe_geostr_balance,  &
                  ref_gp = 29420.0_r_def )

    call feign_initial_wind_config( profile=profile_none,       &
                                    u0=0.0_r_def,               &
                                    v0=0.0_r_def,               &
                                    sbr_angle_lat=0.0_r_def,    &
                                    sbr_angle_lon=0.0_r_def,    &
                                    nl_constant=0.0_r_def,      &
                                    shear=1.0_r_def,            &
                                    wavelength=1.0_r_def,       &
                                    wind_time_period=0.0_r_def, &
                                    smp_init_wind=.false. )

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  subroutine tearDown( this )

    implicit none

    class(analytic_geopot_profiles_test_type), intent(inout) :: this

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  @Test
  subroutine test_all( this )

    use analytic_geopot_profiles_mod,      only: analytic_geopot
    use constants_mod,                     only: PI
    use planet_config_mod,                 only: scaled_radius
    use shallow_water_settings_config_mod, only: swe_test_swe_geostr_balance

    implicit none

    class(analytic_geopot_profiles_test_type), intent(inout) :: this

    real(kind=r_def) :: xyz(3)
    real(kind=r_def) :: geopot_sol, answer
    real(kind=r_def) :: tol

    tol = 1.0e-14_r_def

    ! Check for different latitude values (pole, 45 degrees, equator)
    ! xyz are geocentric coordinates

    xyz = (/ 0.0_r_def, 0.0_r_def, scaled_radius /)
    geopot_sol = analytic_geopot(xyz, swe_test_swe_geostr_balance )
    answer = 11305.645371144576_r_def
    @assertEqual(answer, geopot_sol, tol)

    xyz = (/ 0.0_r_def, sqrt(1.0_r_def/2.0_r_def)*scaled_radius, sqrt(1.0_r_def/2.0_r_def)*scaled_radius /)
    geopot_sol = analytic_geopot(xyz, swe_test_swe_geostr_balance )
    answer = 20362.82268557229_r_def
    @assertEqual(answer, geopot_sol, tol)

    xyz = (/ 0.0_r_def, scaled_radius, 0.0_r_def /)
    geopot_sol = analytic_geopot(xyz, swe_test_swe_geostr_balance )
    answer = 29420.0_r_def
    @assertEqual(answer, geopot_sol, tol)

  end subroutine test_all

end module analytic_geopot_profiles_mod_test
