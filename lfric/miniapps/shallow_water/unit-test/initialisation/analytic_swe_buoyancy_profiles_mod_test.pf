!-----------------------------------------------------------------------------
! (c) Crown copyright 2022 Met Office. All rights reserved.
! The file LICENCE, distributed with this code, contains details of the terms
! under which the code may be used.
!-----------------------------------------------------------------------------

!> Test the analytic buoyancy routine
!>

module analytic_swe_buoyancy_profiles_mod_test

  use constants_mod,  only : r_def, i_def
  use pFUnit_Mod

  implicit none

  private
  public :: analytic_swe_buoyancy_profiles_test_type, test_all

  @TestCase
  type, extends(TestCase) :: analytic_swe_buoyancy_profiles_test_type
    private
  contains
    procedure setUp
    procedure tearDown
    procedure test_all
  end type analytic_swe_buoyancy_profiles_test_type

contains

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine setUp( this )

    use feign_config_mod,        only : feign_base_mesh_config,           &
                                        feign_planet_config,              &
                                        feign_initial_wind_config,        &
                                        feign_domain_size_config,         &
                                        feign_shallow_water_settings_config
    use initial_wind_config_mod, only : profile_none
    use base_mesh_config_mod,    only : geometry_planar,    &
                                        topology_fully_periodic
    use domain_size_config_mod,  only : planar_domain_max_x, &
                                        planar_domain_min_x
    use shallow_water_settings_config_mod,                                &
                                 only : momentum_form_momentum,           &
                                        swe_test_swe_thermal_dbl_vortex,  &
                                        time_scheme_semi_implicit

    implicit none

    class(analytic_swe_buoyancy_profiles_test_type), intent(inout) :: this

    call feign_planet_config( gravity=10.0_r_def,      &
                              radius=6000000.0_r_def,  &
                              omega=8.0E-5_r_def,      &
                              rd=300.0_r_def,          &
                              cp=1000.0_r_def,         &
                              p_zero=100000.0_r_def,   &
                              scaling_factor=1.0_r_def )

    call feign_base_mesh_config                     &
             ( filename='foo',                      &
               prime_mesh_name='unit_test',         &
               geometry=geometry_planar,            &
               offline_partitioning=.false.,        &
               topology=topology_fully_periodic,    &
               fplane=.false., f_lat_deg=0.0_r_def )

    call feign_initial_wind_config( profile=profile_none,       &
                                    sbr_angle_lat=0.0_r_def,    &
                                    sbr_angle_lon=0.0_r_def,    &
                                    u0=0.0_r_def,               &
                                    v0=0.0_r_def,               &
                                    nl_constant=0.0_r_def,      &
                                    shear=1.0_r_def,            &
                                    wavelength=1.0_r_def,       &
                                    wind_time_period=0.0_r_def, &
                                    smp_init_wind=.false. )

    call feign_domain_size_config( planar_domain_max_x = 0.5_r_def, &
                                   planar_domain_max_y = 0.5_r_def, &
                                   planar_domain_min_x = -0.5_r_def, &
                                   planar_domain_min_y = -0.5_r_def)

    call feign_shallow_water_settings_config(                 &
                  thermal_swe = .false.,                      &
                  momentum_form = momentum_form_momentum,     &
                  time_scheme = time_scheme_semi_implicit,    &
                  swe_test = swe_test_swe_thermal_dbl_vortex, &
                  ref_gp = 10000.0_r_def )

  end subroutine setUp

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  subroutine tearDown( this )

    implicit none

    class(analytic_swe_buoyancy_profiles_test_type), intent(inout) :: this

  end subroutine tearDown

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  @Test
  subroutine test_all( this )

    use analytic_swe_buoyancy_profiles_mod, only: analytic_swe_buoyancy
    use constants_mod,                      only: PI
    use planet_config_mod,                  only: scaled_radius
    use shallow_water_settings_config_mod,  only: swe_test_swe_thermal_dbl_vortex

    implicit none

    class(analytic_swe_buoyancy_profiles_test_type), intent(inout) :: this

    real(kind=r_def) :: xyz(3)
    real(kind=r_def) :: buoyancy, answer
    real(r_def), parameter :: tol = 1.0e-14

    ! check thermal vortex case at difference x values

    xyz = (/ 0.2_r_def, 0.0_r_def, scaled_radius /)
    buoyancy = analytic_swe_buoyancy(xyz, swe_test_swe_thermal_dbl_vortex )
    answer = 1.047552825814758_r_def
    @assertEqual(answer, buoyancy, tol)

    xyz = (/ -0.2_r_def, 0.0_r_def, scaled_radius /)
    buoyancy = analytic_swe_buoyancy(xyz, swe_test_swe_thermal_dbl_vortex )
    answer = 0.952447174185242_r_def
    @assertEqual(answer, buoyancy, tol)

    ! check that changing y has no effect

    xyz = (/ -0.2_r_def, 0.4_r_def, scaled_radius /)
    buoyancy = analytic_swe_buoyancy(xyz, swe_test_swe_thermal_dbl_vortex )
    answer = 0.952447174185242_r_def
    @assertEqual(answer, buoyancy, tol)

  end subroutine test_all

end module analytic_swe_buoyancy_profiles_mod_test
